{"ast":null,"code":"var _jsxFileName = \"/Users/adamrathbun/Desktop/cinema-chef/client/src/components/SearchResults/SearchResults.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams, Link } from 'react-router-dom';\n\n// const SearchResults = () => {\n//   const [searchResults, setSearchResults] = useState([]);\n//   const { searchType, searchTerm } = useParams();\n//   const authToken = localStorage.getItem('authToken');\n\n//   useEffect(() => {\n//     const fetchSearchResults = async () => {\n//       try {\n//         let endpoint;\n//         switch (searchType) {\n//           case 'meal-type':\n//             endpoint = `/recipes/meal-type/${searchTerm}`;\n//             break;\n//           case 'dietary-restriction':\n//             endpoint = `/recipes/dietary-restriction/${searchTerm}`;\n//             break;\n//           case 'movie-genre':\n//             endpoint = `/recipes/movie-genre/${searchTerm}`;\n//             break;\n//           default:\n//             console.error('Invalid search type:', searchType);\n//             return;\n//         }\n//         // *update later with hosting\n//         const response = await axios.get(`http://localhost:5000${endpoint}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n//         setSearchResults(response.data);\n//       } catch (error) {\n//         console.error(`Error fetching search results for ${searchType}:`, error);\n//       }\n//     };\n\n//     fetchSearchResults();\n//   }, [authToken, searchType, searchTerm]);\n\n//   return (\n//     <div>\n//       <h2>Search Results</h2>\n//       <ul>\n//         {searchResults.map((recipe) => (\n//           <li key={recipe.recipe_id}>\n//             <Link to={`/recipes/${recipe.recipe_id}`}>\n//               <h3>{recipe.title}</h3>\n//               <p>{recipe.movie_title}</p>\n//               {recipe.image && <img src={recipe.image} alt={recipe.title} />}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default SearchResults;\n\n// 3.18\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams, Link } from 'react-router-dom';\n\n// const SearchResults = () => {\n//   const [searchResults, setSearchResults] = useState([]);\n//   const { searchType, searchTerm } = useParams();\n//   const authToken = localStorage.getItem('authToken');\n\n//   useEffect(() => {\n//     const fetchSearchResults = async () => {\n//       try {\n//         let endpoint;\n//         switch (searchType) {\n//           case 'meal-type':\n//             endpoint = `/recipes/search/meal-type/${searchTerm}`;\n//             break;\n//           case 'dietary-restriction':\n//             endpoint = `/recipes/search/dietary-restriction/${searchTerm}`;\n//             break;\n//           case 'movie-genre':\n//             endpoint = `/recipes/search/movie-genre/${searchTerm}`;\n//             break;\n//           case 'movie-name':\n//             endpoint = `/recipes/search/movie-name/${searchTerm}`;\n//             break;\n//           case 'recipe-name':\n//             endpoint = `/recipes/search/recipe-name/${searchTerm}`;\n//             break;\n//           default:\n//             console.error('Invalid search type:', searchType);\n//             return;\n//         }\n//         const response = await axios.get(`http://localhost:5000${endpoint}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n//         setSearchResults(response.data);\n//       } catch (error) {\n//         console.error(`Error fetching search results for ${searchType}:`, error);\n//       }\n//     };\n\n//     fetchSearchResults();\n//   }, [authToken, searchType, searchTerm]);\n\n//   return (\n//     <div>\n//       <h2>Search Results</h2>\n//       <ul>\n//         {searchResults.map((recipe) => (\n//           <li key={recipe.recipe_id}>\n//             <Link to={`/recipes/${recipe.recipe_id}`}>\n//               <h3>{recipe.title}</h3>\n//               <p>{recipe.movie_title}</p>\n//               {recipe.image && <img src={recipe.image} alt={recipe.title} />}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default SearchResults;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const {\n    searchType,\n    searchTerm\n  } = useParams();\n  const authToken = localStorage.getItem('authToken');\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      try {\n        let endpoint;\n        switch (searchType) {\n          case 'meal-type':\n            endpoint = `/recipes/search/meal-type/${searchTerm}`;\n            break;\n          case 'dietary-restriction':\n            endpoint = `/recipes/search/dietary-restriction/${searchTerm}`;\n            break;\n          case 'movie-genre':\n            endpoint = `/recipes/search/movie-genre/${searchTerm}`;\n            break;\n          case 'recipe-name':\n            endpoint = `/recipes/search/recipe-name/${searchTerm}`;\n            break;\n          default:\n            console.error('Invalid search type:', searchType);\n            return;\n        }\n        const response = await axios.get(`http://localhost:5000${endpoint}`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        setSearchResults(response.data);\n      } catch (error) {\n        console.error(`Error fetching search results for ${searchType}:`, error);\n      }\n    };\n    fetchSearchResults();\n  }, [authToken, searchType, searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(recipe => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/recipes/${recipe.recipe_id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: recipe.movie_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), recipe.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image,\n            alt: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, recipe.recipe_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"qLtCd3jX0uucu0UEaxu3+nBSuXs=\", false, function () {\n  return [useParams];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Link","jsxDEV","_jsxDEV","SearchResults","_s","searchResults","setSearchResults","searchType","searchTerm","authToken","localStorage","getItem","fetchSearchResults","endpoint","console","error","response","get","headers","Authorization","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","recipe","to","recipe_id","title","movie_title","image","src","alt","_c","$RefreshReg$"],"sources":["/Users/adamrathbun/Desktop/cinema-chef/client/src/components/SearchResults/SearchResults.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams, Link } from 'react-router-dom';\n\n// const SearchResults = () => {\n//   const [searchResults, setSearchResults] = useState([]);\n//   const { searchType, searchTerm } = useParams();\n//   const authToken = localStorage.getItem('authToken');\n\n//   useEffect(() => {\n//     const fetchSearchResults = async () => {\n//       try {\n//         let endpoint;\n//         switch (searchType) {\n//           case 'meal-type':\n//             endpoint = `/recipes/meal-type/${searchTerm}`;\n//             break;\n//           case 'dietary-restriction':\n//             endpoint = `/recipes/dietary-restriction/${searchTerm}`;\n//             break;\n//           case 'movie-genre':\n//             endpoint = `/recipes/movie-genre/${searchTerm}`;\n//             break;\n//           default:\n//             console.error('Invalid search type:', searchType);\n//             return;\n//         }\n//         // *update later with hosting\n//         const response = await axios.get(`http://localhost:5000${endpoint}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n//         setSearchResults(response.data);\n//       } catch (error) {\n//         console.error(`Error fetching search results for ${searchType}:`, error);\n//       }\n//     };\n\n//     fetchSearchResults();\n//   }, [authToken, searchType, searchTerm]);\n\n//   return (\n//     <div>\n//       <h2>Search Results</h2>\n//       <ul>\n//         {searchResults.map((recipe) => (\n//           <li key={recipe.recipe_id}>\n//             <Link to={`/recipes/${recipe.recipe_id}`}>\n//               <h3>{recipe.title}</h3>\n//               <p>{recipe.movie_title}</p>\n//               {recipe.image && <img src={recipe.image} alt={recipe.title} />}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default SearchResults;\n\n// 3.18\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams, Link } from 'react-router-dom';\n\n// const SearchResults = () => {\n//   const [searchResults, setSearchResults] = useState([]);\n//   const { searchType, searchTerm } = useParams();\n//   const authToken = localStorage.getItem('authToken');\n\n//   useEffect(() => {\n//     const fetchSearchResults = async () => {\n//       try {\n//         let endpoint;\n//         switch (searchType) {\n//           case 'meal-type':\n//             endpoint = `/recipes/search/meal-type/${searchTerm}`;\n//             break;\n//           case 'dietary-restriction':\n//             endpoint = `/recipes/search/dietary-restriction/${searchTerm}`;\n//             break;\n//           case 'movie-genre':\n//             endpoint = `/recipes/search/movie-genre/${searchTerm}`;\n//             break;\n//           case 'movie-name':\n//             endpoint = `/recipes/search/movie-name/${searchTerm}`;\n//             break;\n//           case 'recipe-name':\n//             endpoint = `/recipes/search/recipe-name/${searchTerm}`;\n//             break;\n//           default:\n//             console.error('Invalid search type:', searchType);\n//             return;\n//         }\n//         const response = await axios.get(`http://localhost:5000${endpoint}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n//         setSearchResults(response.data);\n//       } catch (error) {\n//         console.error(`Error fetching search results for ${searchType}:`, error);\n//       }\n//     };\n\n//     fetchSearchResults();\n//   }, [authToken, searchType, searchTerm]);\n\n//   return (\n//     <div>\n//       <h2>Search Results</h2>\n//       <ul>\n//         {searchResults.map((recipe) => (\n//           <li key={recipe.recipe_id}>\n//             <Link to={`/recipes/${recipe.recipe_id}`}>\n//               <h3>{recipe.title}</h3>\n//               <p>{recipe.movie_title}</p>\n//               {recipe.image && <img src={recipe.image} alt={recipe.title} />}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default SearchResults;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\n\nconst SearchResults = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const { searchType, searchTerm } = useParams();\n  const authToken = localStorage.getItem('authToken');\n\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      try {\n        let endpoint;\n        switch (searchType) {\n          case 'meal-type':\n            endpoint = `/recipes/search/meal-type/${searchTerm}`;\n            break;\n          case 'dietary-restriction':\n            endpoint = `/recipes/search/dietary-restriction/${searchTerm}`;\n            break;\n          case 'movie-genre':\n            endpoint = `/recipes/search/movie-genre/${searchTerm}`;\n            break;\n          case 'recipe-name':\n            endpoint = `/recipes/search/recipe-name/${searchTerm}`;\n            break;\n          default:\n            console.error('Invalid search type:', searchType);\n            return;\n        }\n        const response = await axios.get(`http://localhost:5000${endpoint}`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        });\n        setSearchResults(response.data);\n      } catch (error) {\n        console.error(`Error fetching search results for ${searchType}:`, error);\n      }\n    };\n\n    fetchSearchResults();\n  }, [authToken, searchType, searchTerm]);\n\n  return (\n    <div>\n      <h2>Search Results</h2>\n      <ul>\n        {searchResults.map((recipe) => (\n          <li key={recipe.recipe_id}>\n            <Link to={`/recipes/${recipe.recipe_id}`}>\n              <h3>{recipe.title}</h3>\n              <p>{recipe.movie_title}</p>\n              {recipe.image && <img src={recipe.image} alt={recipe.title} />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchResults;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAEW,UAAU;IAAEC;EAAW,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC9C,MAAMU,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAEnDd,SAAS,CAAC,MAAM;IACd,MAAMe,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,IAAIC,QAAQ;QACZ,QAAQN,UAAU;UAChB,KAAK,WAAW;YACdM,QAAQ,GAAI,6BAA4BL,UAAW,EAAC;YACpD;UACF,KAAK,qBAAqB;YACxBK,QAAQ,GAAI,uCAAsCL,UAAW,EAAC;YAC9D;UACF,KAAK,aAAa;YAChBK,QAAQ,GAAI,+BAA8BL,UAAW,EAAC;YACtD;UACF,KAAK,aAAa;YAChBK,QAAQ,GAAI,+BAA8BL,UAAW,EAAC;YACtD;UACF;YACEM,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAER,UAAU,CAAC;YACjD;QACJ;QACA,MAAMS,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,wBAAuBJ,QAAS,EAAC,EAAE;UACnEK,OAAO,EAAE;YACPC,aAAa,EAAG,UAASV,SAAU;UACrC;QACF,CAAC,CAAC;QACFH,gBAAgB,CAACU,QAAQ,CAACI,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAE,qCAAoCR,UAAW,GAAE,EAAEQ,KAAK,CAAC;MAC1E;IACF,CAAC;IAEDH,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACH,SAAS,EAAEF,UAAU,EAAEC,UAAU,CAAC,CAAC;EAEvC,oBACEN,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MAAAmB,QAAA,EACGhB,aAAa,CAACqB,GAAG,CAAEC,MAAM,iBACxBzB,OAAA;QAAAmB,QAAA,eACEnB,OAAA,CAACF,IAAI;UAAC4B,EAAE,EAAG,YAAWD,MAAM,CAACE,SAAU,EAAE;UAAAR,QAAA,gBACvCnB,OAAA;YAAAmB,QAAA,EAAKM,MAAM,CAACG;UAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBvB,OAAA;YAAAmB,QAAA,EAAIM,MAAM,CAACI;UAAW;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC1BE,MAAM,CAACK,KAAK,iBAAI9B,OAAA;YAAK+B,GAAG,EAAEN,MAAM,CAACK,KAAM;YAACE,GAAG,EAAEP,MAAM,CAACG;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D;MAAC,GALAE,MAAM,CAACE,SAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMrB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxDID,aAAa;EAAA,QAEkBJ,SAAS;AAAA;AAAAoC,EAAA,GAFxChC,aAAa;AA0DnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}