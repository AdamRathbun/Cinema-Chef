{"ast":null,"code":"// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n// // import { useParams, Link } from 'react-router-dom';\n\n// // const SearchResults = () => {\n// //   const [searchResults, setSearchResults] = useState([]);\n// //   const { searchType, searchTerm } = useParams();\n// //   const authToken = localStorage.getItem('authToken');\n\n// //   useEffect(() => {\n// //     const fetchSearchResults = async () => {\n// //       try {\n// //         let endpoint;\n// //         switch (searchType) {\n// //           case 'meal-type':\n// //             endpoint = `/recipes/meal-type/${searchTerm}`;\n// //             break;\n// //           case 'dietary-restriction':\n// //             endpoint = `/recipes/dietary-restriction/${searchTerm}`;\n// //             break;\n// //           case 'movie-genre':\n// //             endpoint = `/recipes/movie-genre/${searchTerm}`;\n// //             break;\n// //           default:\n// //             console.error('Invalid search type:', searchType);\n// //             return;\n// //         }\n// //         // *update later with hosting\n// //         const response = await axios.get(`http://localhost:5000${endpoint}`, {\n// //           headers: {\n// //             Authorization: `Bearer ${authToken}`,\n// //           },\n// //         });\n// //         setSearchResults(response.data);\n// //       } catch (error) {\n// //         console.error(`Error fetching search results for ${searchType}:`, error);\n// //       }\n// //     };\n\n// //     fetchSearchResults();\n// //   }, [authToken, searchType, searchTerm]);\n\n// //   return (\n// //     <div>\n// //       <h2>Search Results</h2>\n// //       <ul>\n// //         {searchResults.map((recipe) => (\n// //           <li key={recipe.recipe_id}>\n// //             <Link to={`/recipes/${recipe.recipe_id}`}>\n// //               <h3>{recipe.title}</h3>\n// //               <p>{recipe.movie_title}</p>\n// //               {recipe.image && <img src={recipe.image} alt={recipe.title} />}\n// //             </Link>\n// //           </li>\n// //         ))}\n// //       </ul>\n// //     </div>\n// //   );\n// // };\n\n// // export default SearchResults;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams, Link } from 'react-router-dom';\n\n// const SearchResults = () => {\n//   const [searchResults, setSearchResults] = useState([]);\n//   const { searchType, searchTerm } = useParams();\n//   const authToken = localStorage.getItem('authToken');\n\n//   useEffect(() => {\n//     const fetchSearchResults = async () => {\n//       try {\n//         let endpoint;\n//         switch (searchType) {\n//           case 'meal-type':\n//             endpoint = `/recipes/search/meal-type/${searchTerm}`;\n//             break;\n//           case 'dietary-restriction':\n//             endpoint = `/recipes/search/dietary-restriction/${searchTerm}`;\n//             break;\n//           case 'movie-genre':\n//             endpoint = `/recipes/search/movie-genre/${searchTerm}`;\n//             break;\n//           case 'movie-name':\n//             endpoint = `/recipes/search/movie-name/${searchTerm}`;\n//             break;\n//           case 'recipe-name':\n//             endpoint = `/recipes/search/recipe-name/${searchTerm}`;\n//             break;\n//           default:\n//             console.error('Invalid search type:', searchType);\n//             return;\n//         }\n//         const response = await axios.get(`http://localhost:5000${endpoint}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n//         setSearchResults(response.data);\n//       } catch (error) {\n//         console.error(`Error fetching search results for ${searchType}:`, error);\n//       }\n//     };\n\n//     fetchSearchResults();\n//   }, [authToken, searchType, searchTerm]);\n\n//   return (\n//     <div>\n//       <h2>Search Results</h2>\n//       <ul>\n//         {searchResults.map((recipe) => (\n//           <li key={recipe.recipe_id}>\n//             <Link to={`/recipes/${recipe.recipe_id}`}>\n//               <h3>{recipe.title}</h3>\n//               <p>{recipe.movie_title}</p>\n//               {recipe.image && <img src={recipe.image} alt={recipe.title} />}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default SearchResults;","map":{"version":3,"names":[],"sources":["/Users/adamrathbun/Desktop/cinema-chef/client/src/components/SearchResults/SearchResults.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n// // import { useParams, Link } from 'react-router-dom';\n\n// // const SearchResults = () => {\n// //   const [searchResults, setSearchResults] = useState([]);\n// //   const { searchType, searchTerm } = useParams();\n// //   const authToken = localStorage.getItem('authToken');\n\n// //   useEffect(() => {\n// //     const fetchSearchResults = async () => {\n// //       try {\n// //         let endpoint;\n// //         switch (searchType) {\n// //           case 'meal-type':\n// //             endpoint = `/recipes/meal-type/${searchTerm}`;\n// //             break;\n// //           case 'dietary-restriction':\n// //             endpoint = `/recipes/dietary-restriction/${searchTerm}`;\n// //             break;\n// //           case 'movie-genre':\n// //             endpoint = `/recipes/movie-genre/${searchTerm}`;\n// //             break;\n// //           default:\n// //             console.error('Invalid search type:', searchType);\n// //             return;\n// //         }\n// //         // *update later with hosting\n// //         const response = await axios.get(`http://localhost:5000${endpoint}`, {\n// //           headers: {\n// //             Authorization: `Bearer ${authToken}`,\n// //           },\n// //         });\n// //         setSearchResults(response.data);\n// //       } catch (error) {\n// //         console.error(`Error fetching search results for ${searchType}:`, error);\n// //       }\n// //     };\n\n// //     fetchSearchResults();\n// //   }, [authToken, searchType, searchTerm]);\n\n// //   return (\n// //     <div>\n// //       <h2>Search Results</h2>\n// //       <ul>\n// //         {searchResults.map((recipe) => (\n// //           <li key={recipe.recipe_id}>\n// //             <Link to={`/recipes/${recipe.recipe_id}`}>\n// //               <h3>{recipe.title}</h3>\n// //               <p>{recipe.movie_title}</p>\n// //               {recipe.image && <img src={recipe.image} alt={recipe.title} />}\n// //             </Link>\n// //           </li>\n// //         ))}\n// //       </ul>\n// //     </div>\n// //   );\n// // };\n\n// // export default SearchResults;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams, Link } from 'react-router-dom';\n\n// const SearchResults = () => {\n//   const [searchResults, setSearchResults] = useState([]);\n//   const { searchType, searchTerm } = useParams();\n//   const authToken = localStorage.getItem('authToken');\n\n//   useEffect(() => {\n//     const fetchSearchResults = async () => {\n//       try {\n//         let endpoint;\n//         switch (searchType) {\n//           case 'meal-type':\n//             endpoint = `/recipes/search/meal-type/${searchTerm}`;\n//             break;\n//           case 'dietary-restriction':\n//             endpoint = `/recipes/search/dietary-restriction/${searchTerm}`;\n//             break;\n//           case 'movie-genre':\n//             endpoint = `/recipes/search/movie-genre/${searchTerm}`;\n//             break;\n//           case 'movie-name':\n//             endpoint = `/recipes/search/movie-name/${searchTerm}`;\n//             break;\n//           case 'recipe-name':\n//             endpoint = `/recipes/search/recipe-name/${searchTerm}`;\n//             break;\n//           default:\n//             console.error('Invalid search type:', searchType);\n//             return;\n//         }\n//         const response = await axios.get(`http://localhost:5000${endpoint}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n//         setSearchResults(response.data);\n//       } catch (error) {\n//         console.error(`Error fetching search results for ${searchType}:`, error);\n//       }\n//     };\n\n//     fetchSearchResults();\n//   }, [authToken, searchType, searchTerm]);\n\n//   return (\n//     <div>\n//       <h2>Search Results</h2>\n//       <ul>\n//         {searchResults.map((recipe) => (\n//           <li key={recipe.recipe_id}>\n//             <Link to={`/recipes/${recipe.recipe_id}`}>\n//               <h3>{recipe.title}</h3>\n//               <p>{recipe.movie_title}</p>\n//               {recipe.image && <img src={recipe.image} alt={recipe.title} />}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default SearchResults;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}