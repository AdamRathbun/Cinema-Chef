{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function LikeRecipe({ userId, recipeId, authToken }) {\n//   const [isLiking, setIsLiking] = useState(false);\n\n//   const handleLike = async () => {\n//     setIsLiking(true);\n//     try {\n//       await axios.post(\n//         'http://localhost:5000/like-recipe',\n//         { user_id: userId, recipe_id: recipeId },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n//     } catch (error) {\n//       console.error('Error liking recipe:', error);\n//     } finally {\n//       setIsLiking(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} disabled={isLiking}>\n//         {isLiking ? 'Liking...' : 'Like Recipe'}\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default LikeRecipe;\n\n// v2\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function LikeRecipe({ userId, recipeId, authToken }) {\n//   const [isLiking, setIsLiking] = useState(false);\n//   const [liked, setLiked] = useState(false);\n\n//   useEffect(() => {\n//     const checkLikedRecipe = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/check-liked-recipe?user_id=${userId}&recipe_id=${recipeId}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n\n//         console.log('Response:', response.data);\n\n//         setLiked(response.data.liked);\n//       } catch (error) {\n//         console.error('Error checking liked recipe:', error);\n//       }\n//     };\n//     checkLikedRecipe();\n//   }, [userId, recipeId, authToken]);\n\n//   const handleLike = async () => {\n//     setIsLiking(true);\n//     try {\n//       if (liked) {\n//         await axios.post(\n//           'http://localhost:5000/delete-like',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(false);\n//       } else {\n//         await axios.post(\n//           'http://localhost:5000/like-recipe',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(true);\n//       }\n//     } catch (error) {\n//       console.error('Error liking recipe:', error);\n//     } finally {\n//       setIsLiking(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} disabled={isLiking}>\n//         Like\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default LikeRecipe;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function LikeRecipe({ userId, recipeId, authToken }) {\n//   const [isLiking, setIsLiking] = useState(false);\n//   const [liked, setLiked] = useState(false);\n\n//   useEffect(() => {\n//     const checkLikedRecipe = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/check-liked-recipe?user_id=${userId}&recipe_id=${recipeId}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n\n//         setLiked(response.data.liked);\n//       } catch (error) {\n//         console.error('Error checking liked recipe:', error);\n//       }\n//     };\n\n//     checkLikedRecipe();\n//   }, [userId, recipeId, authToken]);\n\n//   const handleLike = async () => {\n//     if (isLiking) return;\n\n//     setIsLiking(true);\n//     try {\n//       if (liked) {\n//         await axios.post(\n//           'http://localhost:5000/delete-like',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(false);\n//       } else {\n//         await axios.post(\n//           'http://localhost:5000/like-recipe',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(true);\n//       }\n//     } catch (error) {\n//       console.error('Error liking recipe:', error);\n//     } finally {\n//       setIsLiking(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} disabled={isLiking}>\n//         Like\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default LikeRecipe;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function LikeRecipe({ userId, recipeId, authToken }) {\n//   const [isLiking, setIsLiking] = useState(false);\n//   const [liked, setLiked] = useState(false);\n\n//   useEffect(() => {\n//     const checkLikedRecipe = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/check-liked-recipe?user_id=${userId}&recipe_id=${recipeId}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n//         setLiked(response.data.liked);\n//       } catch (error) {\n//         console.error('Error checking liked recipe:', error);\n//       }\n//     };\n//     checkLikedRecipe();\n//   }, [userId, recipeId, authToken]);\n\n//   const handleLike = async () => {\n//     setIsLiking(true);\n//     try {\n//       if (liked) {\n//         await axios.post(\n//           'http://localhost:5000/delete-like',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(false);\n//       } else {\n//         await axios.post(\n//           'http://localhost:5000/like-recipe',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(true);\n//       }\n//     } catch (error) {\n//       console.error('Error liking recipe:', error);\n//     } finally {\n//       setIsLiking(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} disabled={isLiking}>\n//         Like\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default LikeRecipe;\n\nconst handleLike = async () => {\n  setIsLiking(true);\n  try {\n    console.log('Current liked state:', liked);\n    if (liked) {\n      await axios.post('http://localhost:5000/delete-like', {\n        user_id: userId,\n        recipe_id: recipeId\n      }, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Like deleted successfully');\n      setLiked(false);\n    } else {\n      await axios.post('http://localhost:5000/like-recipe', {\n        user_id: userId,\n        recipe_id: recipeId\n      }, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Recipe liked successfully');\n      setLiked(true);\n    }\n    console.log('New liked state:', liked);\n  } catch (error) {\n    console.error('Error liking recipe:', error);\n  } finally {\n    setIsLiking(false);\n  }\n};","map":{"version":3,"names":["handleLike","setIsLiking","console","log","liked","axios","post","user_id","userId","recipe_id","recipeId","headers","Authorization","authToken","setLiked","error"],"sources":["/Users/adamrathbun/Desktop/cinema-chef/client/src/components/LikeRecipe/LikeRecipe.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function LikeRecipe({ userId, recipeId, authToken }) {\n//   const [isLiking, setIsLiking] = useState(false);\n\n//   const handleLike = async () => {\n//     setIsLiking(true);\n//     try {\n//       await axios.post(\n//         'http://localhost:5000/like-recipe',\n//         { user_id: userId, recipe_id: recipeId },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n//     } catch (error) {\n//       console.error('Error liking recipe:', error);\n//     } finally {\n//       setIsLiking(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} disabled={isLiking}>\n//         {isLiking ? 'Liking...' : 'Like Recipe'}\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default LikeRecipe;\n\n// v2\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function LikeRecipe({ userId, recipeId, authToken }) {\n//   const [isLiking, setIsLiking] = useState(false);\n//   const [liked, setLiked] = useState(false);\n\n//   useEffect(() => {\n//     const checkLikedRecipe = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/check-liked-recipe?user_id=${userId}&recipe_id=${recipeId}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n\n//         console.log('Response:', response.data);\n\n//         setLiked(response.data.liked);\n//       } catch (error) {\n//         console.error('Error checking liked recipe:', error);\n//       }\n//     };\n//     checkLikedRecipe();\n//   }, [userId, recipeId, authToken]);\n\n//   const handleLike = async () => {\n//     setIsLiking(true);\n//     try {\n//       if (liked) {\n//         await axios.post(\n//           'http://localhost:5000/delete-like',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(false);\n//       } else {\n//         await axios.post(\n//           'http://localhost:5000/like-recipe',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(true);\n//       }\n//     } catch (error) {\n//       console.error('Error liking recipe:', error);\n//     } finally {\n//       setIsLiking(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} disabled={isLiking}>\n//         Like\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default LikeRecipe;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function LikeRecipe({ userId, recipeId, authToken }) {\n//   const [isLiking, setIsLiking] = useState(false);\n//   const [liked, setLiked] = useState(false);\n\n//   useEffect(() => {\n//     const checkLikedRecipe = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/check-liked-recipe?user_id=${userId}&recipe_id=${recipeId}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n\n//         setLiked(response.data.liked);\n//       } catch (error) {\n//         console.error('Error checking liked recipe:', error);\n//       }\n//     };\n\n//     checkLikedRecipe();\n//   }, [userId, recipeId, authToken]);\n\n//   const handleLike = async () => {\n//     if (isLiking) return;\n\n//     setIsLiking(true);\n//     try {\n//       if (liked) {\n//         await axios.post(\n//           'http://localhost:5000/delete-like',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(false);\n//       } else {\n//         await axios.post(\n//           'http://localhost:5000/like-recipe',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(true);\n//       }\n//     } catch (error) {\n//       console.error('Error liking recipe:', error);\n//     } finally {\n//       setIsLiking(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} disabled={isLiking}>\n//         Like\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default LikeRecipe;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function LikeRecipe({ userId, recipeId, authToken }) {\n//   const [isLiking, setIsLiking] = useState(false);\n//   const [liked, setLiked] = useState(false);\n\n//   useEffect(() => {\n//     const checkLikedRecipe = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/check-liked-recipe?user_id=${userId}&recipe_id=${recipeId}`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n//         setLiked(response.data.liked);\n//       } catch (error) {\n//         console.error('Error checking liked recipe:', error);\n//       }\n//     };\n//     checkLikedRecipe();\n//   }, [userId, recipeId, authToken]);\n\n//   const handleLike = async () => {\n//     setIsLiking(true);\n//     try {\n//       if (liked) {\n//         await axios.post(\n//           'http://localhost:5000/delete-like',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(false);\n//       } else {\n//         await axios.post(\n//           'http://localhost:5000/like-recipe',\n//           { user_id: userId, recipe_id: recipeId },\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//               'Content-Type': 'application/json',\n//             },\n//           }\n//         );\n//         setLiked(true);\n//       }\n//     } catch (error) {\n//       console.error('Error liking recipe:', error);\n//     } finally {\n//       setIsLiking(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleLike} disabled={isLiking}>\n//         Like\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default LikeRecipe;\n\nconst handleLike = async () => {\n  setIsLiking(true);\n  try {\n    console.log('Current liked state:', liked);\n\n    if (liked) {\n      await axios.post(\n        'http://localhost:5000/delete-like',\n        { user_id: userId, recipe_id: recipeId },\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      console.log('Like deleted successfully');\n      setLiked(false);\n    } else {\n      await axios.post(\n        'http://localhost:5000/like-recipe',\n        { user_id: userId, recipe_id: recipeId },\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      console.log('Recipe liked successfully');\n      setLiked(true);\n    }\n    console.log('New liked state:', liked);\n  } catch (error) {\n    console.error('Error liking recipe:', error);\n  } finally {\n    setIsLiking(false);\n  }\n};\n"],"mappingsjB,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,KAAK,CAAC;IAE1C,IAAIA,KAAK,EAAE;MACT,MAAMC,KAAK,CAACC,IAAI,CACd,mCAAmC,EACnC;QAAEC,OAAO,EAAEC,MAAM;QAAEC,SAAS,EAAEC;MAAS,CAAC,EACxC;QACEC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASC,SAAU,EAAC;UACpC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACDX,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCW,QAAQ,CAAC,KAAK,CAAC;IACjB,CAAC,MAAM;MACL,MAAMT,KAAK,CAACC,IAAI,CACd,mCAAmC,EACnC;QAAEC,OAAO,EAAEC,MAAM;QAAEC,SAAS,EAAEC;MAAS,CAAC,EACxC;QACEC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASC,SAAU,EAAC;UACpC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACDX,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCW,QAAQ,CAAC,IAAI,CAAC;IAChB;IACAZ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,KAAK,CAAC;EACxC,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C,CAAC,SAAS;IACRd,WAAW,CAAC,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}