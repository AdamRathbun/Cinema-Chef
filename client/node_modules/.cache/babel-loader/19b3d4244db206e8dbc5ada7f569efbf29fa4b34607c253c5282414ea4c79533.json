{"ast":null,"code":"var _jsxFileName = \"/Users/adamrathbun/Desktop/cinema-chef/client/src/components/UpdateRecipe/UpdateRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UpdateRecipe({\n  field,\n  initialValue,\n  onUpdate,\n  id,\n  authToken\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [value, setValue] = useState(initialValue);\n  const [isUpdating, setIsUpdating] = useState(false);\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleCancel = () => {\n    setIsEditing(false);\n    setValue(initialValue);\n  };\n  const handleChange = e => {\n    setValue(e.target.value.toString());\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    console.log('Selected File:', file);\n    setValue(file);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isUpdating) {\n      console.log('Update already in progress. Ignoring.');\n      return;\n    }\n    setIsUpdating(true);\n    setIsEditing(false);\n    try {\n      const formData = new FormData();\n      if (field === 'image') {\n        formData.append('field', 'image');\n        formData.append('image', value);\n      } else {\n        formData.append('field', field);\n        formData.append('value', value.toString());\n      }\n      const response = await axios.put(`http://localhost:5000/recipes/${id}`, formData, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (onUpdate) {\n        console.log('Calling onUpdate with:', field, response.data[field]);\n        onUpdate(field, response.data[field]);\n      }\n    } catch (error) {\n      console.error(`Error updating ${field}:`, error);\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [field === 'image' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Choose new image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          accept: \"image/*\",\n          value: undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: field,\n          value: value,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleEdit,\n      children: [\"Edit \", field]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateRecipe, \"Gr8EH2stjz5jXj7w9HDmL/kDp/s=\");\n_c = UpdateRecipe;\nexport default UpdateRecipe;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function UpdateRecipe({ field, initialValue, onUpdate, id, authToken }) {\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [value, setValue] = useState(initialValue);\n//   const [isUpdating, setIsUpdating] = useState(false);\n//   const [isAuthorized, setIsAuthorized] = useState(false);\n\n//   useEffect(() => {\n//     setValue(initialValue);\n//   }, [initialValue]);\n\n//   useEffect(() => {\n//     const checkAuthorization = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/check-authorization', {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n\n//         setIsAuthorized(response.data.isAuthorized);\n//       } catch (error) {\n//         if (error.response && error.response.status === 404) {\n//           setIsAuthorized(false);\n//         } else {\n//           // Handle other errors and log them\n//           console.error('Error checking authorization:', error);\n//         }\n//       }\n//     };\n\n//     checkAuthorization();\n//   }, [authToken]);\n\n//   const handleEdit = () => {\n//     if (!isAuthorized) {\n//       alert(\"You cannot edit this recipe because you are not the original creator.\");\n//       return;\n//     }\n\n//     setIsEditing(true);\n//   };\n\n//   const handleCancel = () => {\n//     setIsEditing(false);\n//     setValue(initialValue);\n//   };\n\n//   const handleChange = (e) => {\n//     setValue(e.target.value);\n//   };\n\n//   const handleFileChange = (e) => {\n//     const file = e.target.files[0];\n//     console.log('Selected File:', file);\n//     setValue(file);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (isUpdating) {\n//       console.log('Update already in progress. Ignoring.');\n//       return;\n//     }\n\n//     setIsUpdating(true);\n\n//     setIsEditing(false);\n\n//     try {\n//       const formData = new FormData();\n\n//       if (field === 'image') {\n//         formData.append('field', 'image');\n//         formData.append('image', value);\n//       } else {\n//         formData.append('field', field);\n//         formData.append('value', value);\n//       }\n\n//       const response = await axios.put(`http://localhost:5000/recipes/${id}`, formData, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n\n//       if (onUpdate) {\n//         onUpdate(field, response.data[field]);\n//       }\n//     } catch (error) {\n//       console.error(`Error updating ${field}:`, error);\n//     } finally {\n//       setIsUpdating(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {isEditing ? (\n//         <form onSubmit={handleSubmit}>\n//           {field === 'image' ? (\n//             <>\n//               <label>Choose new image</label>\n//               <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\n//             </>\n//           ) : (\n//             <>\n//               <label>{field}</label>\n//               <textarea name={field} value={value} onChange={handleChange} required />\n//             </>\n//           )}\n//           <button type=\"submit\">Update</button>\n//           <button type=\"button\" onClick={handleCancel}>\n//             Cancel\n//           </button>\n//         </form>\n//       ) : (\n//         <button type=\"button\" onClick={handleEdit}>\n//           Edit {field}\n//         </button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default UpdateRecipe;\nvar _c;\n$RefreshReg$(_c, \"UpdateRecipe\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateRecipe","field","initialValue","onUpdate","id","authToken","_s","isEditing","setIsEditing","value","setValue","isUpdating","setIsUpdating","handleEdit","handleCancel","handleChange","e","target","toString","handleFileChange","file","files","console","log","handleSubmit","preventDefault","formData","FormData","append","response","put","headers","Authorization","data","error","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","undefined","name","required","onClick","_c","$RefreshReg$"],"sources":["/Users/adamrathbun/Desktop/cinema-chef/client/src/components/UpdateRecipe/UpdateRecipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UpdateRecipe({ field, initialValue, onUpdate, id, authToken }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [value, setValue] = useState(initialValue);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    setValue(initialValue);\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value.toString());\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    console.log('Selected File:', file);\n    setValue(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (isUpdating) {\n      console.log('Update already in progress. Ignoring.');\n      return;\n    }\n\n    setIsUpdating(true);\n\n    setIsEditing(false);\n\n    try {\n      const formData = new FormData();\n\n      if (field === 'image') {\n        formData.append('field', 'image');\n        formData.append('image', value);\n      } else {\n        formData.append('field', field);\n        formData.append('value', value.toString());\n      }\n\n      const response = await axios.put(`http://localhost:5000/recipes/${id}`, formData, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      if (onUpdate) {\n        console.log('Calling onUpdate with:', field, response.data[field]);\n        onUpdate(field, response.data[field]);\n      }\n    } catch (error) {\n      console.error(`Error updating ${field}:`, error);\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  return (\n    <div>\n      {isEditing ? (\n        <form onSubmit={handleSubmit}>\n          {field === 'image' ? (\n            <>\n              <label>Choose new image</label>\n              <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" value={undefined} />\n            </>\n          ) : (\n            <>\n              <label>{field}</label>\n              <textarea name={field} value={value} onChange={handleChange} required />\n            </>\n          )}\n          <button type=\"submit\">Update</button>\n          <button type=\"button\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </form>\n      ) : (\n        <button type=\"button\" onClick={handleEdit}>\n          Edit {field}\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default UpdateRecipe;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function UpdateRecipe({ field, initialValue, onUpdate, id, authToken }) {\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [value, setValue] = useState(initialValue);\n//   const [isUpdating, setIsUpdating] = useState(false);\n//   const [isAuthorized, setIsAuthorized] = useState(false);\n\n//   useEffect(() => {\n//     setValue(initialValue);\n//   }, [initialValue]);\n\n//   useEffect(() => {\n//     const checkAuthorization = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/check-authorization', {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         });\n\n//         setIsAuthorized(response.data.isAuthorized);\n//       } catch (error) {\n//         if (error.response && error.response.status === 404) {\n//           setIsAuthorized(false);\n//         } else {\n//           // Handle other errors and log them\n//           console.error('Error checking authorization:', error);\n//         }\n//       }\n//     };\n\n//     checkAuthorization();\n//   }, [authToken]);\n\n//   const handleEdit = () => {\n//     if (!isAuthorized) {\n//       alert(\"You cannot edit this recipe because you are not the original creator.\");\n//       return;\n//     }\n\n//     setIsEditing(true);\n//   };\n\n//   const handleCancel = () => {\n//     setIsEditing(false);\n//     setValue(initialValue);\n//   };\n\n//   const handleChange = (e) => {\n//     setValue(e.target.value);\n//   };\n\n//   const handleFileChange = (e) => {\n//     const file = e.target.files[0];\n//     console.log('Selected File:', file);\n//     setValue(file);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (isUpdating) {\n//       console.log('Update already in progress. Ignoring.');\n//       return;\n//     }\n\n//     setIsUpdating(true);\n\n//     setIsEditing(false);\n\n//     try {\n//       const formData = new FormData();\n\n//       if (field === 'image') {\n//         formData.append('field', 'image');\n//         formData.append('image', value);\n//       } else {\n//         formData.append('field', field);\n//         formData.append('value', value);\n//       }\n\n//       const response = await axios.put(`http://localhost:5000/recipes/${id}`, formData, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n\n//       if (onUpdate) {\n//         onUpdate(field, response.data[field]);\n//       }\n//     } catch (error) {\n//       console.error(`Error updating ${field}:`, error);\n//     } finally {\n//       setIsUpdating(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {isEditing ? (\n//         <form onSubmit={handleSubmit}>\n//           {field === 'image' ? (\n//             <>\n//               <label>Choose new image</label>\n//               <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\n//             </>\n//           ) : (\n//             <>\n//               <label>{field}</label>\n//               <textarea name={field} value={value} onChange={handleChange} required />\n//             </>\n//           )}\n//           <button type=\"submit\">Update</button>\n//           <button type=\"button\" onClick={handleCancel}>\n//             Cancel\n//           </button>\n//         </form>\n//       ) : (\n//         <button type=\"button\" onClick={handleEdit}>\n//           Edit {field}\n//         </button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default UpdateRecipe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}